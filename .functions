# `a` with no arguments opens the current directory in VS Code Editor, otherwise
# opens the given location
function a() {
	if [ $# -eq 0 ]; then
		code .
	else
		code "$@"
	fi
}

# `o` with no arguments opens the current directory, otherwise opens the given
# location
function o() {
	if [ $# -eq 0 ]; then
		open .
	else
		open "$@"
	fi
}

# Create a new directory and enter it
function mkd() {
	mkdir -p "$@" && cd "$_"
}

# Clean Docker containers, images and volumes
function dockerclean() {
	docker rm $(docker ps -a -q)
	docker rmi $(docker images -q)
	docker volume rm $(docker volume ls -qf dangling=true)
}

# Generate a random string
function randomstr() {
	cat /dev/urandom | env LC_CTYPE=C tr -dc a-z | head -c 16; echo
}

# Start an interactive Ubuntu Docker container with the present directory mounted
function ubuntuhere() {
	docker run -v $(pwd):/root/files -it ubuntu /bin/bash
}

# Build and run the Dockerfile at the current directory
function dockerhere() {
	TAG=$(randomstr)
	docker build -t $TAG . &&
	docker run -it -v $(pwd):/src $TAG &&
	docker rm $TAG
}

# Change to Terraform workspace and apply config
function tfapply() {
	terraform workspace select "$@" && terraform apply -var-file=workspaces/$@.tfvars
}

# Dedupe zsh history
function dedupHistory() {
	cp ~/.zsh_history{,-old}
	tmpFile=`mktemp`
	awk -F ";" '!seen[$2]++' ~/.zsh_history > $tmpFile
	mv $tmpFile ~/.zsh_history
}

# Turn WiFi off and on again to fix slow connections after sleep
function restartWifi() {
	networksetup -setairportpower airport off
	networksetup -setairportpower airport on
}
